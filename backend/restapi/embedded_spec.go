// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Backend API for Brood Clash",
    "title": "Brood Clash",
    "contact": {
      "name": "Ryan's mom"
    },
    "version": "0.1.0"
  },
  "host": "localhost:3000",
  "basePath": "/api/v0",
  "paths": {
    "/controller/authTest": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "controller"
        ],
        "summary": "Test the authorization code",
        "operationId": "authTest",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/presenter/websocket": {
      "get": {
        "tags": [
          "presenter"
        ],
        "summary": "Establish a presenter websocket",
        "operationId": "websocket",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "answer": {
      "type": "object",
      "required": [
        "text",
        "points"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "points": {
          "type": "integer",
          "format": "int32"
        },
        "revealed": {
          "type": "boolean"
        },
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "question": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "answers": {
          "type": "array",
          "maxItems": 8,
          "minItems": 8,
          "items": {
            "$ref": "#/definitions/answer"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Backend API for Brood Clash",
    "title": "Brood Clash",
    "contact": {
      "name": "Ryan's mom"
    },
    "version": "0.1.0"
  },
  "host": "localhost:3000",
  "basePath": "/api/v0",
  "paths": {
    "/controller/authTest": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "controller"
        ],
        "summary": "Test the authorization code",
        "operationId": "authTest",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/presenter/websocket": {
      "get": {
        "tags": [
          "presenter"
        ],
        "summary": "Establish a presenter websocket",
        "operationId": "websocket",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "answer": {
      "type": "object",
      "required": [
        "text",
        "points"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "points": {
          "type": "integer",
          "format": "int32"
        },
        "revealed": {
          "type": "boolean"
        },
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "question": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "answers": {
          "type": "array",
          "maxItems": 8,
          "minItems": 8,
          "items": {
            "$ref": "#/definitions/answer"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
