// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Answer answer
// swagger:model answer
type Answer struct {

	// id
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// points
	// Required: true
	Points *int32 `json:"points"`

	// revealed
	// Required: true
	Revealed *bool `json:"revealed"`

	// text
	// Required: true
	// Min Length: 1
	Text *string `json:"text"`
}

// Validate validates this answer
func (m *Answer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePoints(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRevealed(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateText(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Answer) validatePoints(formats strfmt.Registry) error {

	if err := validate.Required("points", "body", m.Points); err != nil {
		return err
	}

	return nil
}

func (m *Answer) validateRevealed(formats strfmt.Registry) error {

	if err := validate.Required("revealed", "body", m.Revealed); err != nil {
		return err
	}

	return nil
}

func (m *Answer) validateText(formats strfmt.Registry) error {

	if err := validate.Required("text", "body", m.Text); err != nil {
		return err
	}

	if err := validate.MinLength("text", "body", string(*m.Text), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Answer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Answer) UnmarshalBinary(b []byte) error {
	var res Answer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
